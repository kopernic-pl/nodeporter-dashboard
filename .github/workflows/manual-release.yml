name: Manual Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Type of release"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch
          - pre-release
      preid:
        description: "Pre-release identifier (e.g., beta, rc)"
        required: false
        default: "beta"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.19.0

      - name: Install dependencies
        run: npm ci

      - name: Bump version
        id: version
        run: |
          RELEASE_TYPE="${{ github.event.inputs.release_type }}"
          PREID="${{ github.event.inputs.preid }}"
          if [[ "$RELEASE_TYPE" == "pre-release" ]]; then
            npm version prerelease --preid "$PREID" --no-git-tag-version
          else
            npm version "$RELEASE_TYPE" --no-git-tag-version
          fi
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update Chart.yaml and values.yaml versions
        run: |
          sed -i.bak 's/^version: .*/version: ${{ env.VERSION }}/' charts/nodeporter/Chart.yaml
          sed -i.bak 's/^appVersion: ".*"/appVersion: "${{ env.VERSION }}"/' charts/nodeporter/Chart.yaml
          rm charts/nodeporter/Chart.yaml.bak
          sed -i'' -e 's/tag: ".*"/tag: "${{ env.VERSION }}"/' charts/nodeporter/values.yaml

      - name: Commit and tag version bump
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add package.json charts/nodeporter/Chart.yaml charts/nodeporter/values.yaml
          if ! git commit -m "chore(release): v${{ env.VERSION }}"; then
            if git diff --cached --quiet; then
              echo "No changes to commit"
            else
              echo "Error: Failed to commit changes" >&2
              exit 1
            fi
          fi
          git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"

      - name: Get commit SHA
        id: commit_sha
        run: |
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/nodeporter-dashboard
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=raw,value=${{ env.VERSION }}
          labels: |
            org.opencontainers.image.title=nodeporter-dashboard
            org.opencontainers.image.description=A Next.js dashboard, see README for details.
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
            org.opencontainers.image.revision=${{ steps.commit_sha.outputs.sha }}
            org.opencontainers.image.authors=github.com/kopernic-pl
            org.opencontainers.image.licenses=MIT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./ops/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ env.VERSION }}
          platforms: linux/amd64,linux/arm64
          provenance: mode=max
          sbom: true
          push: true

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "Release v${{ env.VERSION }}"
          prerelease: ${{ github.event.inputs.release_type == 'pre-release' }}
          body: |
            Automated release of version v${{ env.VERSION }}.

            **Container Image:**
            [ghcr.io/${{ github.repository_owner }}/nodeporter-dashboard:${{ env.VERSION }}](https://github.com/users/${{ github.repository_owner }}/packages/container/nodeporter-dashboard/${{ env.VERSION }})

            **Helm Chart:**
            [ghcr.io/${{ github.repository_owner }}/charts/nodeporter:${{ env.VERSION }}](https://github.com/${{ github.repository }}/packages?repo_name=nodeporter-dashboard)

            - Chart version: ${{ env.VERSION }}
            - App version: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push version update commit
        run: |
          # Push any remaining changes (if any)
          git push --follow-tags

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.18.2

      - name: Push Helm chart to GHCR
        run: |
          helm registry login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          helm package charts/nodeporter
          helm push nodeporter-*.tgz oci://ghcr.io/${{ github.repository_owner }}/charts
